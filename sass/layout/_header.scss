@use '../abstracts' as *;

.header {
  height: 95vh;
  background-image: linear-gradient(
      to bottom right,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  // a comma here acts as OR
  @media only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 30em),
    only screen and (min-resolution: 192dpi) and (min-width: 30em),
    only screen and (min-width: 96em) {
    background-image: linear-gradient(
        to bottom right,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)
      ),
      url(../img/hero.jpg);
  }

  // /************************/
  // /* Keep clip-path angle */
  // // Refer to https://codepen.io/ckim44/pen/JjGorYd?editors=1100
  // // Credit to https://gist.github.com/stereokai/7666bfe93929b14c2dced148c79e0e97
  // --width: 100vw;
  // width: var(--width);
  // /* Set angle in degrees */
  // --angleDeg: 10;
  // /* Convert degrees to radians using radians = degrees * pi / 180 */
  // --angle: calc(var(--angleDeg) * 0.01745329251);
  // /* Calculate approximate tan(angle) using Taylor series */
  // --tan-term1: var(--angle);
  // --tan-term2: calc((1 / 3) * var(--angle) * var(--angle) * var(--angle));
  // --tan-term3: calc(
  //   (2 / 15) * var(--angle) * var(--angle) * var(--angle) * var(--angle) *
  //     var(--angle)
  // );
  // --tan-term4: calc(
  //   (17 / 315) * var(--angle) * var(--angle) * var(--angle) * var(--angle) *
  //     var(--angle) * var(--angle) * var(--angle)
  // );
  // --tan: calc(
  //   var(--tan-term1) + var(--tan-term2) + var(--tan-term3) + var(--tan-term4)
  // );
  // /* --adjacent must match width of box */
  // --adjacent: var(--width);
  // /* Recall that tan(angle) = opposite / adjacent. Therefore Opposite = Adjacent * tan(angle) */
  // --opposite: calc(var(--tan) * var(--adjacent));
  // clip-path: polygon(0 0, 100% 0, 100% calc(100% - var(--opposite)), 0 100%);
  // /* Keep clip-path angle */
  // /************************/

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  @include respond-to('lg') {
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
